{"version":3,"sources":["pages/Home/ContentForm.module.scss","serviceWorker.ts","pages/Home/LeftSider.tsx","pages/Home/RightSider.tsx","pages/Home/ContentForm.tsx","pages/Home/Table1.tsx","pages/Home/Table2.tsx","pages/Home/Table3.tsx","pages/Home/index.tsx","router/index.tsx","store/User.ts","store/Global.ts","middleware/withFetcher.tsx","middleware/withStore.tsx","App.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","TabPane","btcCapitalDataSource","name","value","type","LeftSider","Sider","theme","width","direction","className","defaultActiveKey","size","style","height","tab","key","overflow","dataSource","renderItem","item","Item","classNames","createColumns","color","title","dataIndex","render","tableDataSource","price","count","total","RightSider","slice","columns","pagination","showHeader","withTooltip","text","tips","sliderMarks","0","25","50","75","100","ContentForm","Group","Button","prefix","defaultValue","marks","Option","operations","Table1","tabBarExtraContent","1","2","3","4","5","6","7","8","9","10","Table2","11","12","Content","Home","classnames","homeContainer","data-testid","Table3","exact","path","component","defaultUserInfo","token","nickname","createContainer","useLocalStorage","initUserInfo","saveUserInfo","useState","userInfo","setUserInfo","logout","useCallback","onUpdUserInfo","partUserInfo","produce","draftState","Object","entries","forEach","assign","useEffect","rememberTheme","setRememberTheme","setTheme","resetTheme","toggleTheme","document","body","setAttribute","withFetcher","config","instance","refreshInterval","withStore","Container","initialState","Provider","wrapper","R","User","Global","App","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4e498a84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-container\":\"ContentForm_card-container__yAQQJ\",\"ant-tabs-card\":\"ContentForm_ant-tabs-card__1bwIV\",\"ant-tabs-content\":\"ContentForm_ant-tabs-content__1-wT8\",\"ant-tabs-tabpane\":\"ContentForm_ant-tabs-tabpane__diTRs\",\"ant-tabs-bar\":\"ContentForm_ant-tabs-bar__3CLib\",\"ant-tabs-tab\":\"ContentForm_ant-tabs-tab__ZVg-h\",\"ant-tabs-tab-active\":\"ContentForm_ant-tabs-tab-active__1YfN9\"};","/* eslint-disable no-eq-null */\n/* eslint-disable eqeqeq */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config?.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config?.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Layout, Divider, Tabs, List, Button, Space } from 'antd';\nimport classNames from 'classnames';\nconst { TabPane } = Tabs;\n\ninterface BtcDataItem {\n  name: string;\n  value: string;\n  type: 'warn' | 'default';\n}\nconst btcCapitalDataSource: BtcDataItem[] = [\n  {\n    name: '啊啊啊哈哈',\n    value: '0.0330',\n    type: 'default'\n  },\n  {\n    name: '啊啊啊哈哈',\n    value: '0.0330',\n    type: 'default'\n  },\n  {\n    name: '啊啊啊哈哈',\n    value: '0.0330',\n    type: 'default'\n  },\n  {\n    name: '啊啊啊哈哈',\n    value: '0.0330',\n    type: 'warn'\n  },\n  {\n    name: '啊啊啊哈哈',\n    value: '0.0330',\n    type: 'default'\n  },\n  {\n    name: '啊啊啊哈哈',\n    value: '0.0330',\n    type: 'default'\n  }\n];\n\nconst LeftSider = () => {\n  return (\n    <Layout.Sider theme=\"light\" width=\"240\">\n      <Space direction=\"vertical\" className=\"w100percent\">\n        <div className=\"h40 lh40 pl12 font-size-sm text-color-placeholder\">交割合约总资产折合</div>\n        <Divider className=\"mt0 mb0\" />\n        <Tabs defaultActiveKey=\"1\" size=\"small\" style={{ height: 300 }}>\n          <TabPane tab=\"自选\" key=\"1\">\n            Content of Tab Pane 1\n          </TabPane>\n          <TabPane tab=\"全部\" key=\"2\">\n            Content of Tab Pane 2\n          </TabPane>\n          <TabPane tab=\"当周\" key=\"3\">\n            Content of Tab Pane 3\n          </TabPane>\n          <TabPane tab=\"次周\" key=\"4\">\n            Content of Tab Pane 3\n          </TabPane>\n          <TabPane tab=\"季度\" key=\"5\">\n            Content of Tab Pane 3\n          </TabPane>\n        </Tabs>\n\n        <div className=\"df fdc\">\n          <div style={{ height: 32 }} className=\"df jsb ac bg-color-grey\">\n            <h4 className=\"mb0 pl12\">BTC资产</h4>\n            <div>\n              <Button type=\"link\" size=\"small\">\n                买币\n              </Button>\n              <Button type=\"link\" size=\"small\">\n                划转\n              </Button>\n            </div>\n          </div>\n          <List\n            style={{ height: 203, overflow: 'auto' }}\n            size=\"small\"\n            dataSource={btcCapitalDataSource}\n            renderItem={(item) => (\n              <List.Item >\n                <div className=\"w100percent df jsb ac\">\n                  <span className=\"fs12\">{item.name}</span>\n                  <span className={classNames('fs12', { 'color-warning': item.type === 'warn' })}>\n                    {item.value}\n                  </span>\n                </div>\n              </List.Item>\n            )}\n          />\n        </div>\n      </Space>\n    </Layout.Sider>\n  );\n};\n\nexport default LeftSider;\n","import React from 'react';\nimport { Layout, Tabs, Table, Divider } from 'antd';\n\nconst { Sider } = Layout;\nconst { TabPane } = Tabs;\n\nconst createColumns = (color: string) => {\n  return [\n    {\n      title: '价格(USD)',\n      dataIndex: 'price',\n      key: 'price',\n      render(item: string) {\n        return <span style={{ color }}>{item}</span>;\n      }\n    },\n    {\n      title: '数量(张)',\n      dataIndex: 'count',\n      key: 'count'\n    },\n    {\n      title: '累计(张)',\n      dataIndex: 'total',\n      key: 'total'\n    }\n  ];\n};\n\nconst tableDataSource = [\n  { key: 1, price: '7,520.76', count: 456, total: '1,068' },\n  { key: 2, price: '7, 520.73', count: 40, total: '612' },\n  { key: 3, price: '7, 520.61', count: 22, total: '572' },\n  { key: 4, price: '7, 520.58', count: 23, total: '550' },\n  { key: 5, price: '7, 520.57', count: 3, total: '527' },\n  { key: 6, price: '7, 520.0', count: 55, total: '524' },\n  { key: 7, price: '7, 519.97', count: 82, total: '469' },\n  { key: 8, price: '7, 519.96', count: 200, total: '387' },\n  { key: 9, price: '7, 519.83', count: 23, total: '187' },\n  { key: 10, price: '7, 519.76', count: 21, total: '187' }\n];\n\nconst RightSider = () => {\n  return (\n    <Sider theme=\"light\" width=\"240\" style={{ overflow: 'auto' }}>\n      <Tabs defaultActiveKey=\"1\" size=\"small\">\n        <TabPane tab=\"盘口\" key=\"1\">\n          <Table\n            dataSource={tableDataSource.slice(0, 3)}\n            columns={createColumns('green')}\n            pagination={false}\n          />\n          <div className=\"pl12 pr12 pt12 pb12 df fdc\">\n            <div className=\"df jsb ac\">\n              <div className=\"fs12 text-color-disabled\">最新价</div>\n              <div className=\"fs12 text-color-disabled\">指数价</div>\n            </div>\n            <div className=\"df jsb ac\">\n              <div className=\"fs18 text-color-primary\">7,507.87</div>\n              <div className=\"fs18 text-color-disabled\">7,497.96</div>\n            </div>\n          </div>\n          <Divider className=\"mt0 mb0\" />\n          <Table\n            showHeader={false}\n            dataSource={tableDataSource.slice(3)}\n            columns={createColumns('red')}\n            pagination={false}\n          />\n        </TabPane>\n        <TabPane tab=\"实时成交\" key=\"2\">\n          Content of Tab Pane 2\n        </TabPane>\n      </Tabs>\n    </Sider>\n  );\n};\n\nexport default RightSider;\n","import React from 'react';\nimport { Tabs, Radio, Tooltip, Button, Space, Input, Divider, Slider } from 'antd';\nimport './ContentForm.module.scss';\n\nconst { TabPane } = Tabs;\n\nconst withTooltip = (text: string, tips = '巴拉巴拉...') => {\n  return (\n    <Tooltip title={tips}>\n      <span>{text}</span>\n    </Tooltip>\n  );\n};\n\nconst sliderMarks = {\n  0: '',\n  25: '',\n  50: '',\n  75: '',\n  100: ''\n};\n\nconst ContentForm = () => {\n  return (\n    <div className=\"card-container bg-color-white\">\n      <Tabs defaultActiveKey=\"1\" size=\"small\" style={{ height: 300 }} type=\"card\">\n        <TabPane tab=\"开仓\" key=\"1\" className=\"pl12\">\n          <div className=\"df jsb\">\n            <div>\n              <Radio.Group size=\"small\">\n                <Space>\n                  <Radio.Button value=\"large\">{withTooltip('限价委托')}</Radio.Button>\n                  <Radio.Button value=\"default\">{withTooltip('计划委托')}</Radio.Button>\n                </Space>\n              </Radio.Group>\n            </div>\n            <div>\n              <Space>\n                {withTooltip('全仓')}\n\n                <Button>张</Button>\n                <Button>20x</Button>\n              </Space>\n            </div>\n          </div>\n\n          <Radio.Group>\n            <Radio value={1}>{withTooltip('只做Maker')}</Radio>\n            <Radio value={2}>{withTooltip('IOC')}</Radio>\n            <Radio value={3}>{withTooltip('FOK')}</Radio>\n          </Radio.Group>\n\n          <div className=\"df\">\n            <div className=\"f1\">\n              <Input prefix=\"买入价(USD)\" />\n              <div className=\"tar fs12\">巴拉巴拉</div>\n              <Input prefix=\"买入量(张)\" />\n              <div className=\"tar fs12\">巴拉巴拉</div>\n              <Slider defaultValue={50} marks={sliderMarks} className=\"mb0 mt0\" />\n              <div className=\"df ac jsb fs12\">\n                <span className=\"color-success\">可开多：--张</span>\n                <span>可用: 7.122BTC</span>\n              </div>\n              <Button type=\"primary\" className=\"w100percent\">\n                买入开多(看涨)\n              </Button>\n            </div>\n            <Divider type=\"vertical\" className=\"h100percent\" />\n            <div className=\"f1\">\n              <Input prefix=\"卖出价(USD)\" />\n              <div className=\"tar fs12\">巴拉巴拉</div>\n              <Input prefix=\"卖出量(张)\" />\n              <div className=\"tar fs12\">巴拉巴拉</div>\n              <Slider defaultValue={50} marks={sliderMarks} className=\"mb0 mt0\" />\n              <div className=\"df ac jsb fs12\">\n                <span className=\"color-success\">可开多：--张</span>\n                <span>可用: 7.122BTC</span>\n              </div>\n              <Button type=\"primary\" className=\"w100percent\">\n                买入开多(看涨)\n              </Button>\n            </div>\n          </div>\n        </TabPane>\n        <TabPane tab=\"平仓\" key=\"2\">\n          Content of Tab Pane 2\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default ContentForm;\n","import React from 'react';\nimport { Table, Tabs, Space, Checkbox, Select, Input, Button } from 'antd';\nimport classNames from 'classnames';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nconst columns = [\n  {\n    title: '合约',\n    dataIndex: '1',\n    key: '1',\n    render(item: any) {\n      return <span style={{ color: 'red' }}>{item}</span>;\n    }\n  },\n  {\n    title: '开仓均价',\n    dataIndex: '2',\n    key: '2'\n  },\n  {\n    title: '持仓均价',\n    dataIndex: '3',\n    key: '3'\n  },\n  {\n    title: '持仓担保资产',\n    dataIndex: '4',\n    key: '4'\n  },\n  {\n    title: '持仓均价',\n    dataIndex: '5',\n    key: '5'\n  },\n  {\n    title: '未实现盈亏',\n    dataIndex: '6',\n    key: '6'\n  },\n  {\n    title: '受益',\n    dataIndex: '7',\n    key: '7'\n  },\n  {\n    title: '收益率',\n    dataIndex: '8',\n    key: '8'\n  },\n  {\n    title: '持仓量',\n    dataIndex: '9',\n    key: '9'\n  },\n  {\n    title: '可平量',\n    dataIndex: '10',\n    key: '10'\n  },\n  {\n    title: '价格',\n    dataIndex: '11',\n    key: '11',\n    render() {\n      return <Input style={{ width: 80 }} />;\n    }\n  },\n  {\n    title: '数量',\n    dataIndex: '12',\n    key: '12',\n\n    render() {\n      return (\n        <Space className=\"df ac\">\n          <Input style={{ width: 80 }} />\n          <Button>平空</Button>\n        </Space>\n      );\n    }\n  },\n  {\n    title: '操作',\n    dataIndex: '13',\n    key: '13',\n    render() {\n      return (\n        <Space>\n          <Button type=\"primary\">止损</Button>\n          <Button type=\"primary\">止损</Button>\n        </Space>\n      );\n    }\n  }\n];\n\nconst operations = (\n  <>\n    <Checkbox>显示所有BTC合约</Checkbox>\n    <Select defaultValue=\"all\" style={{ width: 120 }} className=\"mr12\">\n      <Option value=\"all\">全部撤单</Option>\n      <Option value=\"part\">部分撤单</Option>\n    </Select>\n  </>\n);\n\nconst Table1: React.FC<{ style?: React.CSSProperties; className?: string }> = ({\n  style,\n  className\n}) => {\n  return (\n    <Tabs\n      tabBarExtraContent={operations}\n      className={classNames('card-container', className)}\n      defaultActiveKey=\"1\"\n      size=\"small\"\n      type=\"card\"\n      style={style}\n    >\n      <TabPane tab=\"当前持仓\" key=\"1\">\n        <Table\n          dataSource={[\n            {\n              key: 1,\n              1: '666',\n              2: '666',\n              3: '666',\n              4: '666',\n              5: '666',\n              6: '666',\n              7: '666',\n              8: '666',\n              9: '666',\n              10: '666'\n            }\n          ]}\n          columns={columns}\n        />\n      </TabPane>\n      <TabPane tab=\"当前委托\" key=\"2\">\n        Content of Tab Pane 2\n      </TabPane>\n      <TabPane tab=\"历史委托\" key=\"3\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"成交记录\" key=\"4\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"财务记录\" key=\"5\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"所有持仓\" key=\"6\">\n        Content of Tab Pane 3\n      </TabPane>\n    </Tabs>\n  );\n};\n\nexport default Table1;\n","import React from 'react';\nimport { Table, Tabs, Space, Radio, Checkbox, Select, Button } from 'antd';\nimport classNames from 'classnames';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nconst columns = [\n  {\n    title: '合约',\n    dataIndex: '1',\n    key: '1'\n  },\n  {\n    title: '倍数',\n    dataIndex: '2',\n    key: '2'\n  },\n  {\n    title: '委托时间',\n    dataIndex: '3',\n    key: '3'\n  },\n  {\n    title: '交易类型',\n    dataIndex: '4',\n    key: '4'\n  },\n  {\n    title: '委托类型',\n    dataIndex: '5',\n    key: '5'\n  },\n  {\n    title: '委托量',\n    dataIndex: '6',\n    key: '6'\n  },\n  {\n    title: '委托价',\n    dataIndex: '7',\n    key: '7'\n  },\n  {\n    title: '成交量',\n    dataIndex: '8',\n    key: '8'\n  },\n  {\n    title: '成交均价',\n    dataIndex: '9',\n    key: '9'\n  },\n  {\n    title: '受益',\n    dataIndex: '10',\n    key: '10'\n  },\n  {\n    title: '手续费',\n    dataIndex: '11',\n    key: '11'\n  },\n  {\n    title: '状态',\n    dataIndex: '12',\n    key: '12'\n  },\n  {\n    title: '操作',\n    dataIndex: '13',\n    key: '13',\n    render() {\n      return <Button type=\"default\">查看</Button>;\n    }\n  }\n];\n\nconst operations = (\n  <>\n    <Checkbox>显示所有BTC合约</Checkbox>\n    <Select defaultValue=\"all\" style={{ width: 120 }} className=\"mr12\">\n      <Option value=\"all\">全部撤单</Option>\n      <Option value=\"part\">部分撤单</Option>\n    </Select>\n  </>\n);\n\nconst Table2: React.FC<{ style?: React.CSSProperties; className?: string }> = ({\n  style,\n  className\n}) => {\n  return (\n    <Tabs\n      tabBarExtraContent={operations}\n      className={classNames('card-container', className)}\n      defaultActiveKey=\"1\"\n      size=\"small\"\n      type=\"card\"\n      style={style}\n    >\n      <TabPane tab=\"当前持仓\" key=\"1\">\n        <Space direction=\"vertical\" className=\"w100percent\">\n          <Radio.Group size=\"small\" className=\"pl12 pr12\">\n            <Space>\n              <Radio.Button value=\"large\">限价委托</Radio.Button>\n              <Radio.Button value=\"default\">计划委托</Radio.Button>\n            </Space>\n          </Radio.Group>\n          <Table\n            dataSource={[\n              {\n                key: 1,\n                1: '666',\n                2: '666',\n                3: '666',\n                4: '666',\n                5: '666',\n                6: '666',\n                7: '666',\n                8: '666',\n                9: '666',\n                10: '666',\n                11: '666',\n                12: '666'\n              }\n            ]}\n            columns={columns}\n          />\n        </Space>\n      </TabPane>\n      <TabPane tab=\"当前委托\" key=\"2\">\n        Content of Tab Pane 2\n      </TabPane>\n      <TabPane tab=\"历史委托\" key=\"3\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"成交记录\" key=\"4\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"财务记录\" key=\"5\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"所有持仓\" key=\"6\">\n        Content of Tab Pane 3\n      </TabPane>\n    </Tabs>\n  );\n};\n\nexport default Table2;\n","import React from 'react';\nimport { Table, Tabs, Checkbox, Select } from 'antd';\nimport classNames from 'classnames';\n\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nconst columns = [\n  {\n    title: '成交时间',\n    dataIndex: '1',\n    key: '1'\n  },\n  {\n    title: '交易类型',\n    dataIndex: '2',\n    key: '2'\n  },\n  {\n    title: '成交量(张)',\n    dataIndex: '3',\n    key: '3'\n  },\n  {\n    title: '成交价(USD)',\n    dataIndex: '4',\n    key: '4'\n  },\n  {\n    title: '成交类型',\n    dataIndex: '5',\n    key: '5'\n  },\n  {\n    title: '受益(BTC)',\n    dataIndex: '6',\n    key: '6'\n  }\n];\n\nconst operations = (\n  <>\n    <Checkbox>显示所有BTC合约</Checkbox>\n    <Select defaultValue=\"all\" style={{ width: 120 }} className=\"mr12\">\n      <Option value=\"all\">全部撤单</Option>\n      <Option value=\"part\">部分撤单</Option>\n    </Select>\n  </>\n);\n\nconst Table2: React.FC<{ style?: React.CSSProperties; className?: string }> = ({\n  style,\n  className\n}) => {\n  return (\n    <Tabs\n      tabBarExtraContent={operations}\n      className={classNames('card-container', className)}\n      defaultActiveKey=\"1\"\n      size=\"small\"\n      type=\"card\"\n      style={style}\n    >\n      <TabPane tab=\"当前持仓\" key=\"1\">\n        <Table\n          dataSource={[\n            {\n              key: 1,\n              1: '666',\n              2: '666',\n              3: '666',\n              4: '666',\n              5: '666',\n              6: '666',\n              7: '666',\n              8: '666',\n              9: '666',\n              10: '666'\n            }\n          ]}\n          columns={columns}\n        />\n      </TabPane>\n      <TabPane tab=\"当前委托\" key=\"2\">\n        Content of Tab Pane 2\n      </TabPane>\n      <TabPane tab=\"历史委托\" key=\"3\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"成交记录\" key=\"4\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"财务记录\" key=\"5\">\n        Content of Tab Pane 3\n      </TabPane>\n      <TabPane tab=\"所有持仓\" key=\"6\">\n        Content of Tab Pane 3\n      </TabPane>\n    </Tabs>\n  );\n};\n\nexport default Table2;\n","import React from 'react';\nimport classnames from 'classnames';\nimport style from './style.module.scss';\nimport { Layout } from 'antd';\nimport LeftSider from './LeftSider';\nimport RightSider from './RightSider';\nimport ContentForm from './ContentForm';\n\nimport Table1 from './Table1';\nimport Table2 from './Table2';\nimport Table3 from './Table3';\n\nconst { Content } = Layout;\n\nconst Home: React.FC<{}> = () => {\n  return (\n    <div className={classnames(style.homeContainer)} data-testid=\"homeTitle\">\n      <Layout style={{ height: 600 }}>\n        <LeftSider />\n        <Content className=\"df fdc jce\">\n          图表\n          <ContentForm />\n        </Content>\n        <RightSider />\n      </Layout>\n\n      <Table1 className=\"bg-color-white mt12\" />\n      <Table2 className=\"bg-color-white mt12\" />\n      <Table3 className=\"bg-color-white mt12\" />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from '@pages/Home';\n\n\nexport default () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { createContainer } from 'unstated-next';\nimport produce from 'immer';\nimport { useLocalStorage } from 'react-use';\n\nconst defaultUserInfo = {\n  token: '', // token\n  nickname: '', // 昵称\n};\n\ntype UserInfo = typeof defaultUserInfo;\ntype PartUserInfo = Partial<UserInfo>;\n\nconst User = () => {\n  const [initUserInfo, saveUserInfo] = useLocalStorage<UserInfo>('userInfo', defaultUserInfo);\n  const [userInfo, setUserInfo] = useState<UserInfo>(initUserInfo);\n  const logout = useCallback(() => {\n    setUserInfo(defaultUserInfo);\n  }, [setUserInfo]);\n\n  const onUpdUserInfo = useCallback(\n    (partUserInfo: PartUserInfo) => {\n      setUserInfo(\n        produce(userInfo, (draftState) => {\n          Object.entries(partUserInfo).forEach(([key, value]) => {\n            Object.assign(draftState, partUserInfo);\n          });\n        })\n      );\n    },\n    [userInfo, setUserInfo]\n  );\n\n  useEffect(() => {\n    saveUserInfo(userInfo);\n  }, [userInfo, saveUserInfo]);\n\n  return { logout, userInfo, setUserInfo: onUpdUserInfo };\n};\n\nexport default createContainer(User);\n","import { useState, useEffect, useCallback } from 'react';\nimport { createContainer } from 'unstated-next';\nimport { useLocalStorage } from 'react-use';\n\ntype Theme = 'light' | 'dark';\n\nconst defaultTheme: Theme = 'light';\n\nconst Global = () => {\n  const [rememberTheme, setRememberTheme] = useLocalStorage<Theme>('theme', defaultTheme);\n  const [theme, setTheme] = useState<Theme>(rememberTheme);\n  const resetTheme = useCallback(() => {\n    setTheme(defaultTheme);\n  }, [setTheme]);\n\n  const toggleTheme = useCallback(() => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  }, [theme]);\n\n  useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n    setRememberTheme(theme);\n  }, [theme, setRememberTheme]);\n\n  return { theme, toggleTheme, resetTheme };\n};\n\nexport default createContainer(Global);\n","import React from 'react';\nimport { SWRConfig } from 'swr';\nimport { PickComponentParam } from 'globalType';\n\ntype ValueType = PickComponentParam<typeof SWRConfig, 'value'>;\n\nconst withFetcher = (config: ValueType = {}) => (instance: React.ReactElement) => {\n  return (\n    <SWRConfig\n      value={{\n        refreshInterval: 0,\n        ...config\n      }}\n    >\n      {instance}\n    </SWRConfig>\n  );\n};\n\nexport type WithFetcher = typeof withFetcher;\n\nexport default withFetcher;\n","import React from 'react';\nimport { Container } from 'unstated-next';\n\ntype TContainer<V, S> = Container<V, S>;\n\nconst withStore = <V, S>(Container: TContainer<V, S>, initialState?: any) => (\n  instance: React.ReactElement\n) => {\n  return <Container.Provider initialState={initialState}>{instance}</Container.Provider>;\n};\n\nexport type WithStore = typeof withStore;\n\nexport default withStore;\n","import React from 'react';\nimport * as R from 'ramda';\nimport Router from './router';\nimport { User, Global } from './store';\nimport { withFetcher, withStore } from './middleware';\n\nimport './sass/global.scss';\n\nconst wrapper = R.pipe(withStore(User), withStore(Global), withFetcher());\n\nconst App = () => {\n  return wrapper(<Router />);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}